# BulTrans – Bulgarian Invoice Converter

A FastAPI-based service that converts English PDF invoices into legally-compliant Bulgarian Word (.docx) invoices using a supplier database.

---

## ✅ Features

- Extracts invoice data from unstructured PDF
- Auto-detects customer name, ID, VAT, address, city
- Parses total amount and VAT from any layout
- Converts totals to Bulgarian words
- Fetches exchange rates from BNB.bg or fallback
- Outputs a ready-to-sign Bulgarian invoice (.docx)

---

## 📦 Requirements

```bash
pip install -r requirements.txt
```

---

## 🚀 Run Locally

```bash
uvicorn main:app --reload
```

---

## 📬 API Endpoint

### `POST /process-invoice/`

**Form Data:**
- `supplier_id` (int): Must match `SupplierCompanyID` from `suppliers.xlsx`
- `file`: English invoice in PDF
- `template`: Bulgarian Word invoice template (.docx)

---

### Example cURL

```bash
curl -X POST http://localhost:8000/process-invoice/ \
  -F "supplier_id=206232541" \
  -F "file=@Invoice.pdf" \
  -F "template=@BulTrans_Template.docx"
```

---

## 📥 Downloading the invoice

Once created, the response contains:
```json
{
  "success": true,
  "invoice_number": "0000000002",
  "file_path": "/tmp/bulgarian_invoice_0000000002.docx"
}
```

You can then download it via:

### `GET /download-invoice/{filename}`

Example:
```
https://your-domain.com/download-invoice/bulgarian_invoice_0000000002.docx
```

---

## 🧾 Files

- `main.py`: FastAPI routes
- `process.py`: Core invoice logic
- `suppliers.xlsx`: Supplier data (bank details, VAT, contact)
- `requirements.txt`: Dependencies
- `README.md`: This file 😊

---

Made with ❤️ in Bulgaria 🇧🇬
